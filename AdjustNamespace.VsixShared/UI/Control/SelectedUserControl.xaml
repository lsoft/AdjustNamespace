<UserControl
    x:Class="AdjustNamespace.UI.Control.SelectedUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:control="clr-namespace:AdjustNamespace.UI.Control"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:main="clr-namespace:AdjustNamespace"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    >

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
            Text="{Binding MainMessage}"
            TextWrapping="Wrap"
            />

        <TextBlock
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
            Text="The files below are grouped by their physical folders."
            TextWrapping="Wrap"
            />

        <ListView
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Foreground="{Binding Foreground}"
            ItemsSource="{Binding ToFilterItems}"
            PreviewKeyDown="ListView_PreviewKeyDown"
            >

            <b:Interaction.Triggers>
                <control:SpaceKeyDownEventTrigger EventName="KeyUp">
                    <b:InvokeCommandAction Command="{Binding InvertStatusCommand}" />
                </control:SpaceKeyDownEventTrigger>
            </b:Interaction.Triggers>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>


                        <CheckBox
                            Grid.Column="0"
                            Margin="{Binding LeftMargin}"
                            Content="{Binding ItemPath}"
                            Focusable="False"
                            FontWeight="{Binding FontWeight}"
                            Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                            IsChecked="{Binding IsChecked, Mode=TwoWay}"
                            IsThreeState="true"
                            />

                    </Grid>

                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <CheckBox
            Grid.Row="3"
            HorizontalAlignment="Right"
            Content="{Binding OpenFileCheckBoxText}"
            IsChecked="{Binding OpenFilesToEnableUndo}"
            IsEnabled="{Binding EnableOpenFileCheckBox}"
            />

        <Grid
            Name="RegexGrid"
            Grid.Row="4"
            Margin="0,10,0,0"
            HorizontalAlignment="Stretch"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Column="0"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Margin="5,0,10,0"
                VerticalAlignment="Center"
                Text="Modify produced namespace with regex"
                />

            <TextBox
                Grid.Column="1"
                Text="{Binding Path=ReplaceRegex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                />

            <TextBlock
                Grid.Column="2"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Margin="10,0,10,0"
                VerticalAlignment="Center"
                Text="with the following"
                />

            <TextBox
                Grid.Column="3"
                Text="{Binding Path=ReplacedString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                />

            <TextBlock
                Grid.Column="4"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Margin="10,0,10,0"
                VerticalAlignment="Center"
                Text="(fill both to enable)"
                />
        </Grid>

        <ListView
            Grid.Row="5"
            HorizontalAlignment="Stretch"
            ItemsSource="{Binding KnownRegexes}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            >
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Orientation="Horizontal"
                        HorizontalAlignment="Stretch"
                        />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Button
                        Margin="20,0,20,0"
                        Style="{DynamicResource TextLikeButtonResource}"
                        Content="{Binding RegexName}"
                        Command="{Binding ApplyRegexCommand}"
                        />
                </DataTemplate>
            </ListView.ItemTemplate>
            
        </ListView>


        <Grid
            Name="ButtonGrid"
            Grid.Row="6"
            Margin="0,10,0,0"
            HorizontalAlignment="Stretch"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Width="80"
                Margin="2"
                Padding="10,5,10,5"
                HorizontalAlignment="Left"
                Command="{Binding CloseCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                Content="Cancel"
                />


            <StackPanel
                Grid.Column="3"
                Orientation="Horizontal"
                >

                <Button
                    Name="RescanButton"
                    Width="100"
                    Margin="2"
                    Padding="10,5,10,5"
                    HorizontalAlignment="Right"
                    Command="{Binding RescanCommand}"
                    >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage
                                Width="10"
                                Height="10"
                                Moniker="{x:Static main:ImageMonikers.Logo}"
                                />
                            <TextBlock Margin="10,0,0,0" Text="{Binding RescanButtonTitle, FallbackValue=Rescan}" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button
                    Name="PreviousButton"
                    Width="100"
                    Margin="2"
                    Padding="10,5,10,5"
                    HorizontalAlignment="Right"
                    Command="{Binding PreviousCommand}"
                    >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage
                                Width="10"
                                Height="10"
                                Moniker="{x:Static main:ImageMonikers.Logo}"
                                />
                            <TextBlock Margin="10,0,0,0" Text="{Binding PreviousButtonTitle, FallbackValue=Previous}" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button
                    Name="NextButton"
                    Width="80"
                    Margin="2"
                    Padding="10,5,10,5"
                    HorizontalAlignment="Right"
                    Command="{Binding NextCommand}"
                    >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage
                                Width="10"
                                Height="10"
                                Moniker="{x:Static main:ImageMonikers.Logo}"
                                />
                            <TextBlock Margin="10,0,0,0" Text="{Binding NextButtonTitle, FallbackValue=Next}" />
                        </StackPanel>
                    </Button.Content>
                </Button>

            </StackPanel>

        </Grid>

    </Grid>
</UserControl>
